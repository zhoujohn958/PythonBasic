"""
解包
“解包”是指将一个可迭代对象（如列表、元组、字典等）中的元素，
按照一定的顺序赋值给多个变量的过程。解包常用于变量赋值、函数参数传递等场景
"""
'''
基本解包
最常见的解包是将元组或列表中的元素分别赋值给多个变量：
'''
# 1.赋值解包，元组或列表解包
a, b, c = (1, 2, 3)
print(a)  # 输出 1
print(b)  # 输出 2
print(c)  # 输出 3

x, y = [10, 20]
print(x)  # 输出 10
print(y)  # 输出 20

# 2. 星号（）解包如果可迭代对象的元素个数和变量个数不一致，可以用星号 * 来收集多余的元素

a, *b = [1, 2, 3, 4]
print(a)  # 输出 1
print(b)  # 输出 [2, 3, 4]

*a, b = [1, 2, 3, 4]
print(a)  # 输出 [1, 2, 3]
print(b)  # 输出 4

''' 用两个星号 *处理为字典 '''
def func(a, b, c):
    print(a, b, c)
d = {'a': 1, 'b': 2, 'c': 3}
func(**d)

# 3. 字典解包字典的解包常用于函数参数传递：
def func(x, y):
    print(x, y)

d = {'x': 1, 'y': 2}
func(**d)  # 等价于func(a=1, b=2, c=3)

# 4. 多层嵌套解包解包也可以嵌套使用：
data = (1, (2, 3))
a, (b, c) = data
print(a)  # 输出 1
print(b)  # 输出 2
print(c)  # 输出 3

# 5. 在for循环中的解包解包常用于遍历可迭代对象时：
pairs = [(1, 'a'), (2, 'b'), (3, 'c')]
for num, char in pairs:
    print(num, char)
